<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.yedam.silhyun.member.map.AdminMapper">




<!-- 대쉬보드 -->
<!-- 승인 대기 count-->
<select id="cfmCnt" resultType="map">
SELECT 
	to_char(sysdate,'YYYY/MM/DD') as "sysDate",
  (SELECT COUNT(*) FROM photographer WHERE cfm_cd = 'O') AS "ptgCf",
  (SELECT COUNT(*) FROM studio WHERE cfm_cd = 'O') AS "stdCf",
  (SELECT COUNT(*) FROM event WHERE cfm_cd = 'O') AS "eventCf"
FROM dual
</select>

<!-- 처리 대기 문의 count -->
<select id="qstCnt" resultType="int">
select count(*)
from qst
where rply_sta = 'N'
</select>

<!-- 지난 2주간 매출 -->
<select id="lastSales" resultType="map">
SELECT
  to_char(ord_date, 'yyyy-MM-dd') as "date",
  nvl(SUM(ord_pri),0) as "sales"
FROM
  payment
WHERE
  ord_date BETWEEN sysdate-14 AND sysdate
GROUP BY
  to_char(ord_date, 'yyyy-MM-dd')
ORDER BY
  to_char(ord_date, 'yyyy-MM-dd') ASC
</select>



<!-- 최신 결제내역 5 -->
<select id="recentBuy" resultType="map">
  <![CDATA[
    SELECT 
      CASE WHEN p.ctgr = 'A' THEN '예약' ELSE '클래스' END AS "ctgr",
      CASE WHEN p.ctgr = 'A' THEN p.ctgr_num ELSE 
      (SELECT c.ptg_id FROM class c WHERE c.class_num = p.ctgr_num) END AS "ctgrNum", 
      p.id AS "id", 
      p.paym_pri AS "pri", 
      TO_CHAR(p.ord_date,'YYYY/MM/DD') AS "date"
    FROM payment p
    ORDER BY p.ord_date DESC
    FETCH FIRST 5 ROWS ONLY
  ]]>
</select>


<!-- 최신 댓글 3-->
<select id="recentCom" resultType="map">
SELECT 
  c.id as "id", 
  CASE 
    WHEN c.ctgr = 'A' THEN '예약'
    ELSE '클래스'
  END AS "ctgr", 
  c.cntn as "cntn", 
  to_char(c.com_date,'YYYY/MM/DD') as "comDate",
  (select m.profile from member m where m.id = c.id) as "cProfile"
FROM 
  commment c
order by c.com_date Desc
FETCH FIRST 3 ROWS ONLY
</select>

<!-- 최신 가입 5 -->
<select id="recentJoin" resultType="co.yedam.silhyun.member.vo.MemberVO">
select id, profile, join_date
from member
order by join_date Desc
FETCH FIRST 5 ROWS ONLY
</select>



<!-- 종합승인관리 -->
<!-- ptg승인신청 리스트 -->
<select id="ptgCfmList" resultType="map">
select  ptg_id as "ptgId", nvl(st_id,'소속없음')as "stId", region_cd as "regionCd", regi_date as "regiDate", crn as "crn", 
nvl(shot_place,'장소미정')as "shotPlace", nvl(itr,'소개미정') as "itr", nvl(inst,'인스타없음') as "inst", nvl(work_day,'근무일미정')as "workDay"
from photographer
where cfm_cd = 'O'
</select>

<!--ptg승인신청 select-->
<select id="ptgSelect" parameterType="String" resultType="map">
select  ptg_id as "ptgId", nvl(st_id,'소속없음')as "stId", region_cd as "regionCd", 
nvl(shot_place,'장소미정')as "shotPlace", nvl(itr,'소개미정') as "itr", nvl(inst,'인스타없음') as "inst", nvl(work_day,'근무일미정')as "workDay",
(select nvl(profile,'프로필없음') from member where id = ptg_id) as "profile"
from photographer
where cfm_cd = 'O' and ptg_id = #{ptgId}
</select>

<!-- ptg승인신청 승인 -->
<update id="ptgAccept" parameterType="String">
UPDATE Photographer
SET cfm_cd = 'Y'
WHERE ptg_id = #{ptgId}
</update>

<!-- ptg승인신청 반려 -->
<update id="noPtgAccept" parameterType="String">
UPDATE Photographer
SET cfm_cd = 'N'
WHERE ptg_id = #{ptgId}
</update>


<!-- 리스트 보여주기 -->
	<select id="memberList" parameterType="MemberVO" resultType="co.yedam.silhyun.member.vo.MemberVO">
		select * 
		from member
		order by join_date
	</select>

	<select id="ptgList" parameterType="PhotographerVO" resultType="co.yedam.silhyun.member.vo.PhotographerVO">
		select *
		from photographer
		order by regi_date
	</select>

	<select id="stdList" parameterType="StudioVO" resultType="co.yedam.silhyun.member.vo.StudioVO">
		select *
		from studio
		order by regi_date
	</select>

	<select id="adminInfo" parameterType="MemberVO" resultType="co.yedam.silhyun.member.vo.MemberVO">
		select * from member
		where mem_cd = 'M0'
	</select>
	
	<select id="qtList" parameterType="QuitVO" resultType="co.yedam.silhyun.mypage.vo.QuitVO">
		select *
		from quit
		order by quit_date
	</select>
	
	<select id="belongPtg" parameterType="MemberVO" resultType="co.yedam.silhyun.member.vo.PhotographerVO">
		select *
		from photographer
		where st_id = #{st_id}
	</select>
	
<!-- 신규 보여주기 -->
	<select id="todayMem" parameterType="MemberVO" resultType="co.yedam.silhyun.member.vo.MemberVO">
		select * 
		from member
		where to_char(join_date,'YY/MM/DD') = to_char(SYSDATE,'YY/MM/DD')
		order by join_date
	</select>
	
	<select id="todayPtg" parameterType="PhotographerVO" resultType="co.yedam.silhyun.member.vo.PhotographerVO">
		select * 
		from photographer
		where to_char(regi_date,'YY/MM/DD') = to_char(SYSDATE,'YY/MM/DD')
		order by accp_date
	</select>
	
	<select id="todayStd" parameterType="StudioVO" resultType="co.yedam.silhyun.member.vo.StudioVO">
		select * 
		from studio
		where to_char(regi_date,'YY/MM/DD') = to_char(SYSDATE,'YY/MM/DD')
		order by accp_date
	</select>



	<!-- 등록 -->
	
	<insert id="insertQuitMember" parameterType="String">
		insert into quit
		values(#{id }, to_char(SYSDATE,'YY/MM/DD'), 'T0', '')
	</insert>






<!-- 삭제 -->
<!-- 회원 삭제 -->
	<delete id="deleteMember">
		DELETE from member
		where id = #{id }
	</delete>	
	
<!-- 탈퇴 삭제 -->
	<delete id="deleteQMember">
		DELETE from quit
		where id = #{id }
	</delete>	

<!-- 수정 -->
<update id="updateAdmin">

	UPDATE MEMBER
	<set>
	<if test="name!=null and !name.equals('')">name = #{name },</if>
	<if test="email!=null and !email.equals('')">email = #{email },</if>
	<if test="pwd!=null and !pwd.equals('')">pwd = #{pwd },</if>
	<if test="tel!=null and !tel.equals('')">tel = #{tel },</if>
	<if test="birthDate!=null and !birthDate.equals('')">birth_date = #{birthDate },</if>
	<if test="genCd!=null and !genCd.equals('')">gen_cd = #{genCd }</if>
	</set>
	WHERE mem_cd = 'M0' 

</update>


<update id="updateMember">

	UPDATE MEMBER
	<set>
	<if test="name!=null and !name.equals('')">name = #{name },</if>
	<if test="email!=null and !email.equals('')">email = #{email },</if>
	<if test="tel!=null and !tel.equals('')">tel = #{tel },</if>
	<if test="birthDate!=null and !birthDate.equals('')">birth_date = #{birthDate },</if>
	<if test="genCd!=null and !genCd.equals('')">gen_cd = #{genCd },</if>
	 
	 <!-- 
	<if test="pointSum!=null and !pointSum.equals('')">point_sum = #{pointSum },</if>
	  -->
	 
	<if test="memCd!=null and !memCd.equals('')">mem_cd = #{memCd }</if>
	</set>
	WHERE id = #{id } 

</update>



<!-- 그래프 -->
<!-- 탈퇴그래프 -->

<select id="quitGraph" resultType="HashMap">
  SELECT 
    COUNT(CASE WHEN quit_cd = 'T0' THEN 1 END) AS "운영자에 의한 강제퇴장",
    COUNT(CASE WHEN quit_cd = 'T1' THEN 1 END) AS "기록삭제",
    COUNT(CASE WHEN quit_cd = 'T2' THEN 1 END) AS "이용장애",
    COUNT(CASE WHEN quit_cd = 'T3' THEN 1 END) AS "타사이트 선호",
    COUNT(CASE WHEN quit_cd = 'T4' THEN 1 END) AS "사용빈도 낮음",
    COUNT(CASE WHEN quit_cd = 'T5' THEN 1 END) AS "콘텐츠불만",
    COUNT(CASE WHEN quit_cd = 'T6' THEN 1 END) AS "기타"
  FROM quit
  order by quit_cd
</select>


<!-- 랭킹 -->
<!-- 기록가 -->
<select id="ptgRank" resultType="map">
select ctgr_num as "ctgrNum", count(*) as cnt, 
			(select profile from member where id= ctgr_num) as profile
from payment 
where ctgr = 'A'
group by ctgr_num
order by cnt Desc
FETCH FIRST 5 ROWS ONLY
</select>

<!-- 클래스 -->
<select id="classRank" resultType="map">
SELECT c.cla_ttl AS "classTitle",
       COUNT(*) AS "count",
       c.thni AS "profile",
       c.ptg_id AS "ptgId"
FROM payment p
JOIN class c ON p.ctgr_num = c.class_num
WHERE p.ctgr = 'C'
GROUP BY c.class_num, c.cla_ttl, c.thni, c.ptg_id
ORDER BY "count" DESC
FETCH FIRST 5 ROWS ONLY
</select>


<!-- 분야그래프/작가분포  -->
<select id="ptgGraph" resultType="HashMap">
  SELECT 
    COUNT(CASE WHEN fd_cd = 'B1' THEN 1 END) AS "제품",
    COUNT(CASE WHEN fd_cd = 'B2' THEN 1 END) AS "음식",
    COUNT(CASE WHEN fd_cd = 'B3' THEN 1 END) AS "행사",
    COUNT(CASE WHEN fd_cd = 'B4' THEN 1 END) AS "건축/인테리어",
    COUNT(CASE WHEN fd_cd = 'B5' THEN 1 END) AS "패션",
    COUNT(CASE WHEN fd_cd = 'B6' THEN 1 END) AS "프로필/화보",
    COUNT(CASE WHEN fd_cd = 'B7' THEN 1 END) AS "웨딩",
    COUNT(CASE WHEN fd_cd = 'B8' THEN 1 END) AS "일반스냅",
    COUNT(CASE WHEN fd_cd = 'B9' THEN 1 END) AS "반려동물"
  FROM FIELD
  order by fd_cd
</select>













<!-- 회원전체리스트 페이징 -->

<select id="getListMember" resultType="co.yedam.silhyun.member.vo.MemberVO">
	 select * from( select rownum rn, a.* from( 
 
 			select * 
 			from member		
	<if test="type == 'all'">WHERE 1 = 1</if>
	<if test="type == 'id'">WHERE id LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'name'">WHERE name LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'email'">WHERE email LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'tel'">WHERE tel LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'joinDate'">WHERE join_date LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'birthDate'">WHERE birth_date LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'genCd'">WHERE gen_cd '%'||#{keyword }||'%'</if>
	<if test="type == 'pointSum'">WHERE point_sum >= #{keyword } order by point_sum DESC</if>
	<if test="type == 'memCd'">WHERE mem_cd LIKE '%'||#{keyword }||'%'</if>

	<![CDATA[	
	 	) a where rownum <= #{pageNum} * #{amount}) b where rn > (#{pageNum}-1) * #{amount}
	 ]]>
</select>

<select id="getTotalCount" resultType="int">
	select count(*) 
	from member
	<if test="type == 'all'">WHERE 1 = 1</if>
	<if test="type == 'id'">WHERE id LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'name'">WHERE name LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'email'">WHERE email LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'tel'">WHERE tel LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'joinDate'">WHERE join_date LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'birthDate'">WHERE birth_date LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'genCd'">WHERE gen_cd '%'||#{keyword }||'%'</if>
	<if test="type == 'pointSum'">WHERE point_sum >= #{keyword } order by point_sum DESC</if>
	<if test="type == 'memCd'">WHERE mem_cd LIKE '%'||#{keyword }||'%'</if>

</select>
<!-- 기록가리스트 페이징 -->
<select id="getListPtg" resultType="co.yedam.silhyun.member.vo.PhotographerVO">
	 select * from( select rownum rn, a.* from( 
 
 			select * 
 			from photographer	
	<if test="type == 'all'">WHERE 1 = 1</if>
	<if test="type == 'ptgId'">WHERE ptg_id LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'stId'">WHERE st_id LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'regionCd'">WHERE region_cd LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'crn'">WHERE ern LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'inst'">WHERE inst LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'workDay'">WHERE work_day LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'accpDate'">WHERE accp_date LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'ptgCd'">WHERE ptg_cd '%'||#{keyword }||'%'</if>

	<![CDATA[	
	 	) a where rownum <= #{pageNum} * #{amount}) b where rn > (#{pageNum}-1) * #{amount}
	 ]]>
</select>

<select id="getTotalPtg" resultType="int">
	select count(*) 
	from photographer
	<if test="type == 'all'">WHERE 1 = 1</if>
	<if test="type == 'ptgId'">WHERE ptg_id LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'stId'">WHERE st_id LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'regionCd'">WHERE region_cd LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'crn'">WHERE ern LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'inst'">WHERE inst LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'workDay'">WHERE work_day LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'accpDate'">WHERE accp_date LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'ptgCd'">WHERE ptg_cd '%'||#{keyword }||'%'</if>

</select>

<!-- 탈퇴리스트 페이징 -->

<select id="getListQuit" resultType="map">
 			select id as "id", quit_date as "quitDate", 
 		CASE WHEN quit_cd = 'T0' THEN '운영자에 의한 강제퇴장'
 		 WHEN quit_cd = 'T1' THEN '기록삭제' 
 		 WHEN quit_cd = 'T2' THEN '이용장애'
   WHEN quit_cd = 'T3' THEN '타사이트 선호'
WHEN quit_cd = 'T4' THEN  '사용빈도 낮음'
 WHEN quit_cd = 'T5' THEN  '콘텐츠불만'
else '기타' end as "quitCd", nvl(deta_resn,'없음') as "detaResn"
	 from( select rownum rn, a.* from( 
 
 			select * 
 			from quit		
    <if test="type == 'all'">WHERE 1 = 1</if>
      <if test="type == 'id'">WHERE id LIKE '%'||#{keyword}||'%'</if>
      <if test="type == 'quitDate'">WHERE quit_date LIKE '%'||#{keyword}||'%'</if>
      <if test="type == 'quitCd'">
        WHERE quit_cd = 
        CASE 
          WHEN #{keyword} = '기록삭제' THEN 'T1'
          WHEN #{keyword} = '이용장애' THEN 'T2'
          WHEN #{keyword} = '타사이트 선호' THEN 'T3'
          WHEN #{keyword} = '사용빈도 낮음' THEN 'T4'
          WHEN #{keyword} = '콘텐츠불만' THEN 'T5'
          WHEN #{keyword} like '%'||'운영자'||'%' THEN 'T0'
          ELSE #{keyword}
        END
      </if>
	
	<![CDATA[	
	 	) a where rownum <= #{pageNum} * #{amount}) b where rn > (#{pageNum}-1) * #{amount}
	 ]]>
</select>


<select id="getTotalQuit" resultType="int">
	select count(*) 
	from quit
	<if test="type == 'all'">WHERE 1 = 1</if>
	<if test="type == 'id'">WHERE id LIKE '%'||#{keyword }||'%'</if>
	<if test="type == 'quitDate'">WHERE quit_date LIKE '%'||#{keyword }||'%'</if>
      <if test="type == 'quitCd'">
        WHERE quit_cd = 
        CASE 
          WHEN #{keyword} = '기록삭제' THEN 'T1'
          WHEN #{keyword} = '이용장애' THEN 'T2'
          WHEN #{keyword} = '타사이트 선호' THEN 'T3'
          WHEN #{keyword} = '사용빈도 낮음' THEN 'T4'
          WHEN #{keyword} = '콘텐츠불만' THEN 'T5'
          WHEN #{keyword} like '%'||'운영자'||'%' THEN 'T0'
          ELSE #{keyword}
        END
      </if>
	<if test="type == 'detaResn'">WHERE deta_resn LIKE '%'||#{keyword }||'%'</if>
</select>




<!-- 이벤트관리페이지. 이벤트 목록 가져오기. 종료 포함-->
<select id="getEventList" resultType="map">
    <![CDATA[
SELECT nvl(e.name,'이름없음') as "name", e.id as "id", nvl(e.term, '0')  as "term", 
    e.start_date as "startDate", e.bnph_sta as "bnphSta", e.cpn_pub_sta as "cpnPubSta",
    e.event_num as "eventNum",
    CASE 
        WHEN e.start_date > SYSDATE THEN '진행예정'
        WHEN e.start_date <= SYSDATE AND SYSDATE <= e.start_date + e.term THEN '진행중'
        ELSE '종료'    
    END AS "eventStt"
FROM event e
where e.start_date+nvl(e.term,0) > sysdate
and e.cfm_cd = 'Y'
    ]]>
</select>

<!-- 이벤트관리페이지. 이벤트 목록 가져오기. 종료 제외-->
<select id="getEventAllList" resultType="map">
    <![CDATA[
SELECT nvl(e.name,'이름없음') as "name", e.id as "id", nvl(e.term, '0')  as "term", 
    e.start_date as "startDate", e.bnph_sta as "bnphSta", e.cpn_pub_sta as "cpnPubSta",
    e.event_num as "eventNum",
    CASE 
        WHEN e.start_date > SYSDATE THEN '진행예정'
        WHEN e.start_date <= SYSDATE AND SYSDATE <= e.start_date + e.term THEN '진행중'
        ELSE '종료'    
    END AS "eventStt"
FROM event e
where e.cfm_cd = 'Y'
    ]]>
</select>

<!-- 이벤트관리페이지. 진행예정, 진행중 카운트 -->
<select id="getEventCnt" resultType="map">
  <![CDATA[
SELECT 
	to_char(sysdate+1,'YYYY/MM/DD') as "sysDate",
  COUNT(CASE WHEN e.start_date > SYSDATE THEN 1 END) AS "soon",
  COUNT(CASE WHEN e.start_date <= SYSDATE AND SYSDATE <= e.start_date + NVL(e.term, 0) THEN 1 END) AS "ing"
FROM event e
where e.cfm_cd = 'Y'
]]>
</select>


<!-- 이벤트관리페이지. 이벤트 자세한 정보 아작스 -->
<select id="getEventContent" parameterType="String" resultType="co.yedam.silhyun.event.vo.EventVO">
select *
from event 
where event_num = #{eventNum}
</select>













</mapper>